apiVersion: v1
kind: Template
metadata:
  name: manageiq-template
  annotations:
    description: Containerized manageiq
  creationTimestamp: null
objects:
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: postgresql
      labels:
        template: postgresql-ephemeral-template
    spec:
      strategy:
        type: Recreate
        resources: {  }
      triggers:
        -
          type: ImageChange
          imageChangeParams:
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              namespace: openshift
              name: 'postgresql:latest'
        -
          type: ConfigChange
      replicas: 1
      selector:
        name: postgresql
      template:
        metadata:
          creationTimestamp: null
          labels:
            name: postgresql
        spec:
          volumes:
            -
              name: postgresql-data
              emptyDir: {  }
          containers:
            -
              name: postgresql
              image: 'centos/postgresql-94-centos7:latest'
              ports:
                -
                  containerPort: 5432
                  protocol: TCP
              env:
                -
                  name: POSTGRESQL_USER
                  value: admin
                -
                  name: POSTGRESQL_ADMIN_PASSWORD
                  value: smartvm
                -
                  name: POSTGRESQL_PASSWORD
                  value: smartvm
                -
                  name: POSTGRESQL_DATABASE
                  value: vmdb_production
              resources: {  }
              volumeMounts:
                -
                  name: postgresql-data
                  mountPath: /var/lib/pgsql/data
              terminationMessagePath: /dev/termination-log
              imagePullPolicy: IfNotPresent
              securityContext:
                capabilities: {  }
                privileged: false
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {  }
  - kind: Service
    apiVersion: v1
    metadata:
      name: postgresql
      labels:
        template: postgresql-ephemeral-template
    spec:
      ports:
        -
          name: postgresql
          protocol: TCP
          port: 5432
          targetPort: 5432
      selector:
        name: postgresql
      type: ClusterIP
      sessionAffinity: None
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: manageiq
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      creationTimestamp: null
      name: manageiq
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: manageiq:base
      resources: {}
      source:
        git:
          ref: s2i
          uri: https://github.com/vrutkovs/docker-manageiq.git
        type: Git
      strategy:
        dockerStrategy:
          from:
            kind: DockerImage
            name: centos/ruby-22-centos7:latest
        type: Docker
      triggers:
      - github:
          secret: secret101
        type: GitHub
      - generic:
          secret: secret101
        type: Generic
      - type: ConfigChange
    status:
      lastVersion: 0
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      creationTimestamp: null
      name: manageiq-s2i
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: manageiq:latest
      resources: {}
      source:
        git:
          ref: master
          uri: https://github.com/manageiq/manageiq
        type: Git
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'manageiq:base'
          env:
            -
              name: CONTEXT_DIR
              value: /var/www/miq/vmdb
          scripts: 'image:///usr/libexec/sti'
          incremental: true
          forcePull: true
      triggers:
      - github:
          secret: secret101
        type: GitHub
      - generic:
          secret: secret101
        type: Generic
      - type: ConfigChange
      - type: ImageChange
        imageChange:
          from:
            kind: ImageStreamTag
            name: 'manageiq:base'
    status:
      lastVersion: 0
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      annotations:
        openshift.io/scc: privileged
      creationTimestamp: null
      name: manageiq-deploy
    spec:
      replicas: 1
      selector:
        deploymentconfig: manageiq-deploy
      strategy:
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Recreate
      template:
        metadata:
          annotations:
            openshift.io/scc: privileged
          creationTimestamp: null
          labels:
            deploymentconfig: manageiq-deploy
        spec:
          containers:
          - image: manageiq:latest
            imagePullPolicy: Always
            name: manageiq-master
            labels:
              app: manageiq
            ports:
            - containerPort: 443
              protocol: TCP
            resources: {}
            securityContext:
              privileged: true
              runAsUser: 0
            terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          securityContext:
            privileged: true
            runAsUser: 0
          terminationGracePeriodSeconds: 30
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - manageiq-master
          from:
            kind: ImageStreamTag
            name: manageiq:latest
        type: ImageChange
  - kind: Route
    apiVersion: v1
    metadata:
      name: manageiq-route
    spec:
      port:
        targetPort: "443"
      tls:
        termination: passthrough
      to:
        kind: Service
        name: www
  - kind: Service
    apiVersion: v1
    metadata:
      name: www
    spec:
      ports:
      - name: http
        port: 443
        protocol: TCP
        targetPort: 443
      selector:
        app: manageiq
      sessionAffinity: None
      type: ClusterIP
